<Window x:Class="QuestThemeUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:QuestThemeUI"
        xmlns:localvm="clr-namespace:QuestThemeUI.ViewModels"
        xmlns:cv="clr-namespace:QuestThemeUI.Converters"
        xmlns:pg="clr-namespace:QuestThemeUI.Pages"
        mc:Ignorable="d"
        Title="MainWindow" Height="768" Width="1366" WindowStyle="None" WindowState="Maximized">
    <Window.DataContext>
        <localvm:MainViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <cv:BoolVisibilityConverter x:Key="boolVisibility"/>
        <cv:StringUriConverter x:Key="stringUri"/>
        <cv:TagImageConverter x:Key="tagImage"/>

        <Geometry x:Key="UpArrowGeometry">M 0 15 L 15 0 L 30 15 Z</Geometry>
        
        <Style x:Key="BaseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>

        <Style x:Key="PreviousButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButtonStyle}">
            <Setter Property="Background" Value="#999999"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#888888"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="NextButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButtonStyle}">
            <Setter Property="Background" Value="#FF9500"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#ED8D00"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type ButtonBase}">
            <Border x:Name="Chrome" 
                    Background="{TemplateBinding Background}" 
                    BorderBrush="Transparent" 
                    SnapsToDevicePixels="true"
                    CornerRadius="5">
                <ContentPresenter 
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" 
                    RecognizesAccessKey="True" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="#ADADAD"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Margin" Value="0 10 0 0"/>
            <Setter Property="FontSize" Value="26"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1.5*"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <Border x:Name="border" SnapsToDevicePixels="True" Opacity="1" Grid.ColumnSpan="2"/>
                            <Border x:Name="bd3" SnapsToDevicePixels="True"
                                        CornerRadius="5"
                                        Width="140"
                                        Height="75">
                                <Image Height="65" Width="130" Source="{Binding ThemePicture, Mode=OneWay, Converter={StaticResource tagImage}}" Stretch="Fill"/>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}" Grid.Column="1" 
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="True">
                                <Setter Property="FocusVisualStyle">
                                    <Setter.Value>
                                        <Style>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#F7F7F7" TargetName="border"/>
                                <Setter Property="Background" Value="#00bbff" TargetName="bd3"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="Background" Value="#00bbff" TargetName="bd3"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="MinHeight" Value="44"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
        </Style>

        <ImageBrush x:Key="ThemeOneBrush" ImageSource="Images/bg1.jpg"  Stretch="UniformToFill"/>
        <ImageBrush x:Key="ThemeTwoBrush" ImageSource="Images/bg2.jpg"  Stretch="UniformToFill"/>
        
    </Window.Resources>
    <Grid x:Name="bg">
        <Grid.Style>
            <Style TargetType="Grid">
                <Setter Property="Background" Value="{StaticResource ThemeOneBrush}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ThemeModel.ThemeTitle}" Value="Theme Two">
                        <Setter Property="Background" Value="{StaticResource ThemeTwoBrush}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>
        <Grid.RowDefinitions>
            <RowDefinition Height="100"/>
            <RowDefinition/>
            <RowDefinition Height="120"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="300"/>
        </Grid.ColumnDefinitions>

        <StackPanel Orientation="Horizontal"
                        VerticalAlignment="Center"
                        Margin="40 0">
            <Image Source="Images/qq.jpg" Height="60" Width="60">
                <Image.Clip>
                    <EllipseGeometry RadiusX="30" RadiusY="30" Center="30, 30"/>
                </Image.Clip>
            </Image>
            <TextBlock Text="Ryan" Foreground="White" FontSize="24"
                           VerticalAlignment="Center"
                           FontFamily="Arial"
                           Margin="15 0"/>
        </StackPanel>

        <Grid Grid.Column="1" Grid.RowSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="45"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Button x:Name="btnTheme" Click="btnTheme_Click">
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border x:Name="themeBorder" Height="48" Width="40"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    Margin="0 -5 42 0"
                                    CornerRadius="5"
                                    Opacity="0.3"/>

                            <TextBlock Text="&#xe60a;" FontFamily="Fonts/#iconfont" FontSize="24" Foreground="White"
                                       HorizontalAlignment="Right"
                                       Margin="50 8"/>          
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="themeBorder" Property="Background" Value="LightGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
            </Button>

            <Grid x:Name="themePanel" Grid.Row="1" VerticalAlignment="Top" Visibility="Collapsed">
                <Path Data="{StaticResource UpArrowGeometry}" Fill="White" HorizontalAlignment="Right"
                      Margin="0 0 48 0"/>
                <Border Background="White" Height="200" CornerRadius="5"
                        Margin="0 10 30 0"/>
                
                <ListBox ItemsSource="{Binding ThemeModels}"
                         SelectedItem="{Binding ThemeModel}"
                         BorderThickness="0"
                         Margin="3 13 33 3">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Grid>
                                            <Border Name="border" />
                                            <ContentPresenter/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <RadioButton 
                                Style="{DynamicResource RadioButtonStyle}"
                                HorizontalContentAlignment="Stretch" FocusVisualStyle="{x:Null}">
                                <RadioButton.IsChecked>
                                    <Binding Path="IsSelected" RelativeSource="{RelativeSource AncestorType=ListBoxItem}" Mode="TwoWay"/>
                                </RadioButton.IsChecked>

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Margin="10 0 0 0" Text="{Binding ThemeTitle}" FontSize="14" VerticalAlignment="Center"
                                                   Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type RadioButton}}}"/>
                                    </StackPanel>
                                </Grid>
                            </RadioButton>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
        </Grid>

        <Border Grid.Row="1" Grid.ColumnSpan="2" Background="White" Height="520" Width="750"
                CornerRadius="10">
            <Grid Grid.Row="1" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="100"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <StackPanel HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                    <TextBlock FontSize="24"
                               FontFamily="Arial"
                               HorizontalAlignment="Center">
                            <Run Text="BUILD" FontWeight="Bold"/>
                            YOUR PROFILE
                    </TextBlock>
                    <TextBlock Text="This information will let us know more about you."
                               Foreground="Gray"
                               FontFamily="Arial"
                               FontSize="16"
                               Margin="0 10 0 0"/>                    
                </StackPanel>

                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="35"/>
                        <RowDefinition/>
                        <RowDefinition Height="60"/>
                    </Grid.RowDefinitions>

                    <UniformGrid Columns="3">
                        <Border>
                            <TextBlock Text="ABOUT" Foreground="White" 
                                       FontFamily="Arial"
                                       VerticalAlignment="Center" 
                                       HorizontalAlignment="Center"/>

                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="Background" Value="#999999"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding PageModel.CurrentPageIndex}" Value="0">
                                            <Setter Property="Background" Value="#FF9500"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        <Border>
                            <TextBlock Text="ACCOUNT" Foreground="White" 
                                       FontFamily="Arial"
                                       VerticalAlignment="Center" 
                                       HorizontalAlignment="Center"/>
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="Background" Value="#999999"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding PageModel.CurrentPageIndex}" Value="1">
                                            <Setter Property="Background" Value="#FF9500"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        <Border>
                            <TextBlock Text="ADDRESS" Foreground="White" 
                                       FontFamily="Arial"
                                       VerticalAlignment="Center" 
                                       HorizontalAlignment="Center"/>
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="Background" Value="#999999"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding PageModel.CurrentPageIndex}" Value="2">
                                            <Setter Property="Background" Value="#FF9500"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                    </UniformGrid>

                    <Frame Grid.Row="1" x:Name="changeFrame" 
                           Source="{Binding PageModel.CurrentPagePath, Converter={StaticResource stringUri}}" Height="auto" Width="auto" 
                           NavigationUIVisibility="Hidden"
                           Margin="50 0"/>
                    
                    <DockPanel Grid.Row="2">
                        <Button Template="{DynamicResource ButtonTemplate}"
                                Style="{StaticResource PreviousButtonStyle}"
                                Content="PREVIOUSE" Width="120" Height="36" HorizontalAlignment="Left"
                                Margin="10 0"
                                Visibility="{Binding PageModel.ShowPrevious, Converter={StaticResource boolVisibility}}"
                                Command="{Binding PreviousCommand}"
                                />
                        
                        <Button Template="{DynamicResource ButtonTemplate}" 
                                Style="{StaticResource NextButtonStyle}"
                                Content="{Binding PageModel.NextBtnContent}" Width="120" Height="36" HorizontalAlignment="Right"
                                Margin="10 0"
                                Visibility="{Binding PageModel.ShowNext, Converter={StaticResource boolVisibility}}"
                                Command="{Binding NextCommand}"
                                />
                    </DockPanel>
                </Grid>
            </Grid>
        </Border>
    </Grid>
</Window>
